router.get("/", (req, res) => {
     console.log(22222222222222);
    return res.json({"books": books.books});
});

/**
*  @swagger
*   components:
*     schemas:
*       Book:
*         type: object
*         required:
*           - id
*           - title
*           - author
*         properties:
*           id:
*             type: integer
*             description: The auto-generated id of the book.
*           title:
*             type: string
*             description: The title of your book.
*           author:
*             type: string
*             description: Who wrote the book?
*         example:
*            id: some id
*            title: title from author
*            author: author
*/

router.get("/:id", (req, res) => {
     const reqId = req.params.id || 0;
     const searchabledId = books.books
    
     for(let i = 0; i < searchabledId.length; i++){
         if(reqId !== searchabledId[i].id){
            continue
        }
        return res.send(searchabledId[i])
     }
     res.sendStatus(404)
     console.log('reqId', reqId);
     console.log(books.books);
    // fs.readFileSync('./db.json', JSON.stringify(books))

    // const book = req.app.db.get("books").find({ id: req.params.id }).value();
  
    // if(!book){
    //   res.sendStatus(404)
    // }
  
    //   res.send(book);
  });



  //    put
    //   try {
    //       req.app.db
    //           .get("books")
    //           .find({ id: req.params.id })
    //           .assign(req.body)
    //           .write();

    //       res.send(req.app.db.get("books").find({ id: req.params.id }));
    //   } catch (error) {
    //       return res.status(500).send(error);
    //   }